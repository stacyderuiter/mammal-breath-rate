---
title: "Allometry of Mammalian Breathing Rates"
author: "Elliot Stielstra, Ethan Wilstermann, Simon Rylaarsdam, Stacy DeRuiter, Andreas Fahlman"
date: "4/30/2024"
format:
  html:
    embed-resources: true
    code-tools: true
editor: source
---

```{r}
#| label: setup 
#| include: false

library(tidyverse)
library(ggformula)
library(glmmTMB)
library(ggeffects)
library(readxl)
library(plotly)
library(DHARMa)
library(emmeans)

knitr::opts_chunk$set(
  # folder where images will be saved
  fig.path = 'figures/breath-rate-',
  # file type for image files (can also be eps, jpeg, ...)
  dev = 'png',
  # resolution for image files
  dpi = 300)
```

# Introduction

## Context and Goals

In this report and the included analysis, we aim to understand the
relationship between breathing frequency and body mass for mammals of
different habitats. 

We aim to explore how the relationship changes based
on habitat. Additionally, previous studies have used both fasted and
non-fasted animals, but this study uses data from only fasted animals.


Since eating and the resulting digestion has an effect on metabolic
rate, the data provided for analysis aims to standardize this variable.


```{r}
# Andreas' computer
# breath_data <- read.csv("X.csv")
# Stacy's computer
breath_data <- read.csv('data/breath-rate.csv')

breath_data <- breath_data |>
  select(log_fr, log_Mb, habitat, order, family, genus, species,
         breath_rate, body_mass, sex, 
         activity_level, individual_name, common_name, age, temp, location) |>
  # force activity level variable to be categorical
  mutate(activity_level = factor(activity_level)) |>
  na.omit()

breath_data <- breath_data |>
  arrange(order, common_name)

glimpse(breath_data)
```

## Exploratory Graphs

```{r}
gf_point(log_fr ~ log_Mb | habitat, alpha=0.1, data = breath_data) 
```

```{r}
gf_point(log_fr ~ log_Mb, data = breath_data, color= ~habitat)|> 
    gf_labs(x = "Log 10 Body mass (kg)",
           y = "Log 10 Breaths per Minute",
           color = "Habitat")
```


# Fitting the model

Full model

I am not sure why we included only order before?

I think individual variation also might be better accounted for *not* nested but it doesn't make an evidence difference either way.

```{r}
model_full <- glmmTMB(log_fr ~ log_Mb * habitat + activity_level + location + 
                        temp + (1 | order/family/genus/species) + (1 | individual_name), 
                      data = breath_data)
summary(model_full)
```


## Model Assessment

With a model created, it is important to test the model to ensure that
it passes all model assessments. With a model that passes all
assessments, we can be confident that the model accurately represents
patterns found within the data.

```{r}
breath_data <- breath_data |>
  mutate(preds = predict(model_full),
         resids = resid(model_full))
```

# Lack of Non-Linearity

```{r}
gf_point(resids ~ preds, data = breath_data, alpha = 0.2)
```

The plot examines the relationship between the residuals and the
predicted values. Upon visual inspection, the plot does not demonstrate
a any trends. The spread of the points is also relatively constant as a function of predicted value (given that there are fewer large mass animals) so the condition of constant residual variance also seems to be met.

Because of the random effects it might be better to used scaled residuals to check these conditions:

```{r}
sim_res <- simulateResiduals(model_full)
plotResiduals(sim_res, quantreg = FALSE)
```


# Independence of Residuals

```{r}
acf(resid(model_full))
```

The ACF value at lag 1 is slightly worrisome but probably acceptable (there are no indications of strong non-independence of the residuals).


# Normality of Residuals

```{r}
gf_histogram(~resids, data = breath_data, bins = 20)
```

The distribution of the residuals is unimodal and pretty symmetric, so there are not worries about the residual normality condition.



## Model Analysis

```{r}
car::Anova(model_full)
```

The ANOVA output provides moderate evidence of an interaction between
habitat and body mass (and also breath rate and activity level, and location). 

But which for which habitats do we really think
the mass-breath rate slope are different?

We can use the R package `emmeans` and its function `emtrends()` to do a
post-hoc comparison of the slopes for each habitat. For each pair of
habitats, we will test the null hypothesis that the *difference in
slopes* is 0. (So, a small p-value for a pair means the slopes of those
two habitats are different.) Since we are doing several hypothesis tests
together, the chances of a false positive are elevated; to compensate,
`emtrends()` has used Tukey's method to adjust the p-values before
reporting.

```{r}
slope_comparison <- emtrends(model_full, 
         pairwise ~ habitat,
         var = "log_Mb")

slope_comparison <- as.data.frame(slope_comparison$contrasts)
slope_comparison
```

The top part of the output gives a slope for each habitat with CIs. The
lower "contrasts" part is where we'll focus now: it gives the p-values
for the tests comparing each pair of habitats.

We have moderate (for aquatic/terrestrial, p = `r slope_comparison["aquatic - terrestrial", "p.value"]`; for semiaquatic - terrestrial, p = `r slope_comparison["semiaquatic - terrestrial", "p.value"]`) evidence that terrestrial
habitats are different from the others. But we have no evidence (p =
`r slope_comparison["aquatic - semiaquatic", "p.value"]`) that the slopes are different between aquatic and semiaquatic.

## Prediction Plot

**Log-log Scale Prediction Plot**

For the prediction plots shown below, the other predictors in the model but not shown in the plot were held fixed at the following values:

- activity level: 1
- location: water for aquatic, air for terrestrial, both for semiaquatic

```{r}
predictoutput <- ggpredict(model_full,
                           terms = c('log_Mb', 'habitat', 'location'),
                           condition = c(activity_level = 1)) |>
  filter((facet == 'air' & group %in% c('terrestrial', 'semiaquatic')) |
           facet == 'water' & group %in% c('aquatic', 'semiaquatic'))

# I have no idea why, but when you just alter the predict output object by doing 10^x for each column, you LOSE ROWS. So make a whole new data frame, I guess

natural_preds <- data.frame(mass = 10^predictoutput$x,
                            breaths = 10^predictoutput$predicted,
                            conf_low = 10^predictoutput$conf.low,
                            conf_hi = 10^predictoutput$conf.high,
                            habitat = predictoutput$group,
                            location = predictoutput$facet)
# plot data
gf_point(breath_rate ~ body_mass | habitat, color = ~location, data = breath_data,
         alpha = 0.3) |>
  # with log scales on both axes
  gf_refine(scale_x_log10(), scale_y_log10()) |>
  gf_labs(x = 'Body Mass (kg)',
          y = 'Breaths per Minute') |>
  # add the predictions now
  gf_line(breaths ~ mass | habitat,
          color = ~location,
          data = natural_preds,
    inherit = FALSE) |>
  gf_ribbon(conf_low + conf_hi ~ mass | habitat,
            color = ~location, fill = ~location,
            data = natural_preds,
            inherit = FALSE)
```

**Interactive Prediction Plot**

```{r}
gf_point(breath_rate ~ body_mass | habitat, data = breath_data,
         alpha = 0.3, tooltip = ~common_name, color = ~order) |>
  # with log scales on both axes
  gf_refine(scale_x_log10(), scale_y_log10()) |>
  gf_labs(x = 'Body Mass (kg)',
          y = 'Breaths per Minute') |>
  # add the predictions now
  gf_line(breaths ~ mass | habitat,
          color = ~location,
          data = natural_preds,
    inherit = FALSE) |>
  gf_ribbon(conf_low + conf_hi ~ mass | habitat,
            color = ~location,
            data = natural_preds,
            inherit = FALSE) |>
  ggplotly()
```



## Contact Information

Elliot Stielstra ees45\@calvin.edu 616-634-3423

Simon Rylaarsdam Simon.c.Rylaarsdam\@gmail.com 616-752-0007

Ethan Wilstermann 3wilster\@gmail.com 616-617-1436
